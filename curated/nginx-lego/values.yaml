## nginx-lego spins up a scalable ingress provider that can also provision SSL certs
## nginx-lego spins up a scalable ingress provider that can also provision SSL certs
## See https://github.com/jetstack/kube-lego/tree/master/examples/nginx for more information on implementation
## See https://github.com/jetstack/kube-lego/tree/master/examples/nginx for more information on implementation


## Nginx configuration
## Nginx configuration
## ref: https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx#automated-certificate-management-with-kube-lego
## ref: https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx#automated-certificate-management-with-kube-lego
##
##
nginx:
nginx:
  replicaCount: 1
  replicaCount: 1
  image:
  image:
    repository: registry.cn-hangzhou.aliyuncs.com/kubeapps/k8s-gcr-nginx-ingress-controller
    repository: k8s.gcr.io/nginx-ingress-controller
    tag: "0.8.3"
    tag: "0.8.3"
    pullPolicy: IfNotPresent
    pullPolicy: IfNotPresent
  service:
  service:
    type: LoadBalancer
    type: LoadBalancer
  monitoring: false
  monitoring: false
  resources:
  resources:
    limits:
    limits:
      cpu: 1
      cpu: 1
      memory: 2Gi
      memory: 2Gi
    requests:
    requests:
      cpu: 1
      cpu: 1
      memory: 128Mi
      memory: 128Mi
  configmap:
  configmap:
    proxy_connect_timeout: "30"
    proxy_connect_timeout: "30"
    proxy_read_timeout: "600"
    proxy_read_timeout: "600"
    proxy_send_imeout: "600"
    proxy_send_imeout: "600"
    hsts_include_subdomains: "false"
    hsts_include_subdomains: "false"
    body_size: "64m"
    body_size: "64m"
    server_name_hash_bucket_size: "256"
    server_name_hash_bucket_size: "256"
    # TODO: figure out how to expose `{nginx_addr}:8080/nginx_status`, on existing service or create new one?
    # TODO: figure out how to expose `{nginx_addr}:8080/nginx_status`, on existing service or create new one?
    enable_vts_status: "false"
    enable_vts_status: "false"


## Default Backend configuration
## Default Backend configuration
## To run a different 404 page for the managed domains please see the documentation below
## To run a different 404 page for the managed domains please see the documentation below
## ref: https://github.com/kubernetes/contrib/tree/master/404-server
## ref: https://github.com/kubernetes/contrib/tree/master/404-server
##
##
default:
default:
  replicaCount: 1
  replicaCount: 1
  image:
  image:
    repository: k8s.gcr.io/defaultbackend
    repository: registry.cn-hangzhou.aliyuncs.com/kubeapps/k8s-gcr-defaultbackend
    tag: "1.0"
    tag: "1.0"
    pullPolicy: IfNotPresent
    pullPolicy: IfNotPresent
  resources:
  resources:
    limits:
    limits:
      cpu: 1
      cpu: 1
      memory: 2Gi
      memory: 2Gi
    requests:
    requests:
      cpu: 1
      cpu: 1
      memory: 128Mi
      memory: 128Mi


## kube-lego configuration
## kube-lego configuration
## ref: https://github.com/jetstack/kube-lego
## ref: https://github.com/jetstack/kube-lego
##
##
lego:
lego:
  enabled: false
  enabled: false
  replicaCount: 1
  replicaCount: 1
  image:
  image:
    repository: jetstack/kube-lego
    repository: jetstack/kube-lego
    tag: "0.1.3"
    tag: "0.1.3"
    pullPolicy: IfNotPresent
    pullPolicy: IfNotPresent
  configmap:
  configmap:
    email: "my@email.tld"
    email: "my@email.tld"
    # Production Let's Encrypt server
    # Production Let's Encrypt server
    # url: "https://acme-v01.api.letsencrypt.org/directory"
    # url: "https://acme-v01.api.letsencrypt.org/directory"
    # Test Let's Encrypt server
    # Test Let's Encrypt server
    url: "https://acme-staging.api.letsencrypt.org/directory "
    url: "https://acme-staging.api.letsencrypt.org/directory "
  resources:
  resources:
    limits:
    limits:
      cpu: 1
      cpu: 1
      memory: 2Gi
      memory: 2Gi
    requests:
    requests:
      cpu: 1
      cpu: 1
      memory: 128Mi
      memory: 128Mi
