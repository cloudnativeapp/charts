{{- if eq .Values.mode "distributed" }}
{{- $replicaCount := int .Values.statefulset.replicaCount }}
{{- if and (eq (mod $replicaCount 2) 0) (gt $replicaCount 3) (lt $replicaCount 33) }}
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ include "minio.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "minio.name" . }}
    helm.sh/chart: {{ include "minio.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "minio.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "minio.fullname" . }}-headless
  replicas: {{ .Values.statefulset.replicaCount }}
  podManagementPolicy: {{ .Values.statefulset.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.statefulset.updateStrategy }}
    {{- if (eq "Recreate" .Values.statefulset.updateStrategy) }}
    rollingUpdate: null
    {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "minio.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        helm.sh/chart: {{ include "minio.chart" . }}
      {{- if or .Values.podAnnotations }}
      annotations: {{ toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- include "minio.imagePullSecrets" . | nindent 6 }}
      affinity:
      {{- if eq .Values.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ include "minio.name" . }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
      {{- else if eq .Values.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ include "minio.name" . }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
      {{- end }}
      {{- if .Values.nodeAffinity }}
        nodeAffinity: {{ toYaml .Values.nodeAffinity | nindent 10 }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      containers:
      - name: "minio"
        image: {{ include "minio.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.securityContext.enabled }}
        securityContext:
          runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end }}
        env:
        {{- if .Values.image.debug }}
        - name: BITNAMI_DEBUG
          value: "true"
        {{- end }}
        - name: MINIO_DISTRIBUTED_MODE_ENABLED
          value: "yes"
        - name: MINIO_SKIP_CLIENT
          value: "yes"
        - name: MINIO_DISTRIBUTED_NODES
          {{- $minioFullname := include "minio.fullname" . }}
          {{- $minioHeadlessServiceName := printf "%s-%s" $minioFullname "headless" | trunc 63  }}
          {{- $releaseNamespace := .Release.Namespace }}
          value: {{range $i, $e := until $replicaCount }}{{ $minioFullname }}-{{ $e }}.{{ $minioHeadlessServiceName }}.{{ $releaseNamespace }}.svc.cluster.local,{{ end }}
        {{- if .Values.useCredentialsFile }}
        - name: MINIO_ACCESS_KEY_FILE
          value: "/opt/bitnami/minio/secrets/access-key"
        {{- else }}
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "minio.secretName" . }}
              key: access-key
        {{- end }}
        {{- if .Values.useCredentialsFile }}
        - name: MINIO_SECRET_KEY_FILE
          value: "/opt/bitnami/minio/secrets/secret-key"
        {{- else }}
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "minio.secretName" . }}
              key: secret-key
        {{- end }}
        - name: MINIO_BROWSER
          value: {{ ternary "off" "on" .Values.disableWebUI | quote }}
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 8 }}
{{- end }}
        ports:
        - name: minio
          containerPort: 9000
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          httpGet:
            path: /minio/health/live
            port: minio
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          tcpSocket:
            port: minio
        {{- end }}
        {{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        {{- if .Values.useCredentialsFile }}
        - name: minio-credentials
          mountPath: /opt/bitnami/minio/secrets/
        {{- end }}
        - name: "data"
          mountPath: {{ .Values.persistence.mountPath }}
      volumes:
      {{- if .Values.useCredentialsFile }}
      - name: minio-credentials
        secret:
          secretName: {{ include "minio.secretName" . }}
      {{- end }}
{{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
{{- else }}
  volumeClaimTemplates:
  - metadata:
      name: "data"
      labels:
        app.kubernetes.io/name: {{ include "minio.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.persistence.annotations }}
      annotations: {{ toYaml .Values.persistence.annotations | nindent 8 }}
      {{- end }}
    spec:
      accessModes: {{ toYaml .Values.persistence.accessModes | nindent 8 }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
{{- end }}
{{- end }}
{{- end }}
