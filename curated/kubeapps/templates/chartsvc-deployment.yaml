apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "kubeapps.chartsvc.fullname" . }}
  labels:
    app: {{ template "kubeapps.chartsvc.fullname" . }}
    chart: {{ template "kubeapps.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.chartsvc.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "kubeapps.chartsvc.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "kubeapps.chartsvc.fullname" . }}
        release: {{ .Release.Name }}
    spec:
{{- include "kubeapps.imagePullSecrets" . | indent 6 }}
      containers:
      - name: chartsvc
        image: {{ template "kubeapps.image" (list .Values.chartsvc.image .Values.global) }}
        command:
        - /chartsvc
        args:
        - --mongo-user=root
        - --mongo-url={{ template "kubeapps.mongodb.fullname" . }}
        env:
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongodb.existingSecret }}
              key: mongodb-root-password
        ports:
        - name: http
          containerPort: {{ .Values.chartsvc.service.port }}
        livenessProbe:
{{ toYaml .Values.chartsvc.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.chartsvc.readinessProbe | indent 10 }}
        resources:
{{ toYaml .Values.chartsvc.resources | indent 12 }}
    {{- with .Values.chartsvc.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
    {{- with .Values.chartsvc.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.chartsvc.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
