{{- if .Values.rbac.create -}}
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ template "kubeapps.apprepository.fullname" . }}
  labels:
    app: {{ template "kubeapps.apprepository.fullname" . }}
    chart: {{ template "kubeapps.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
- apiGroups:
  - kubeapps.com
  resources:
  - apprepositories
  verbs:
  - get
  - list
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ template "kubeapps.apprepository.fullname" . }}
  labels:
    app: {{ template "kubeapps.apprepository.fullname" . }}
    chart: {{ template "kubeapps.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "kubeapps.apprepository.fullname" . }}
subjects:
- kind: ServiceAccount
  name: {{ template "kubeapps.apprepository.fullname" . }}
  namespace: {{ .Release.Namespace }}
---
# Define role, but no binding, so users can be bound to this role
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ .Release.Name }}-repositories-read
rules:
- apiGroups:
  - kubeapps.com
  resources:
  - apprepositories
  verbs:
  - list
  - get
---
# Define role, but no binding, so users can be bound to this role
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ .Release.Name }}-repositories-write
rules:
- apiGroups:
  - kubeapps.com
  resources:
  - apprepositories
  verbs:
  - get
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
{{- end -}}
