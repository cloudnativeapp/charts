## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName

# The frontend service is the main reverse proxy used to access the Kubeapps UI
# To expose Kubeapps externally either configure the ingress object below or
# set frontend.service.type=LoadBalancer in the frontend configuration.
# ref: http://kubernetes.io/docs/user-guide/ingress/
#
ingress:
  # Set to true to enable ingress record generation
  enabled: false

  # Set this to true in order to add the corresponding annotations for cert-manager
  certManager: false

  # Ingress annotations done as key:value pairs
  # For a full list of possible ingress annotations, please see
  # ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
  #
  # If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  annotations:
  #  kubernetes.io/ingress.class: nginx
    # Keep the connection open with the API server even if idle (the default is 60 seconds)
    # Setting it to 10 minutes which should be enough for our current use case of deploying/upgrading/deleting apps
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"

  # The list of hostnames to be covered with this ingress record.
  # Most likely this will be just one host, but in the event more hosts are needed, this is an array
  hosts:
  - name: kubeapps.local
    path: /

    # Set this to true in order to enable TLS on the ingress record
    tls: false

    ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
    tlsSecret: kubeapps.local-tls

  secrets:
  # If you're providing your own certificates, please use this to add the certificates as secrets
  # key and certificate should start with -----BEGIN CERTIFICATE----- or
  # -----BEGIN RSA PRIVATE KEY-----
  #
  # name should line up with a tlsSecret set further up
  # If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
  #
  # It is also possible to create and manage the certificates outside of this helm chart
  # Please see README.md for more information
  # - name: kubeapps.local-tls
  #   key:
  #   certificate:

frontend:
  replicaCount: 2
  image:
    registry: docker.io
    repository: bitnami/nginx
    tag: 1.16.0-r3
  service:
    port: 80
    type: ClusterIP
    annotations: {}
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 60
    timeoutSeconds: 5
  readinessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 0
    timeoutSeconds: 5
  # https://github.com/kubeapps/kubeapps/issues/478#issuecomment-422979262
  resources:
    limits:
      cpu: 250m
      memory: 128Mi
    requests:
      cpu: 25m
      memory: 32Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

# AppRepository Controller is the controller used to manage the repositories to
# sync. Set apprepository.initialRepos to configure the initial set of
# repositories to use when first installing Kubeapps.
apprepository:
  # Running a single controller replica to avoid sync job duplication
  replicaCount: 1
  image:
    registry: docker.io
    repository: bitnami/kubeapps-apprepository-controller
    tag: 1.4.0
  # Image used to perform chart repository syncs
  syncImage:
    registry: docker.io
    repository: bitnami/kubeapps-chart-repo
    tag: 1.4.0-r1
  initialRepos:
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
  - name: incubator
    url: https://kubernetes-charts-incubator.storage.googleapis.com
  - name: svc-cat
    url: https://svc-catalog-charts.storage.googleapis.com
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  # Additional repositories
  # - name: chartmuseum
  #   url: https://chartmuseum.default:8080
  #   # Specify an Authorization Header if you are using an authentication method.
  #   authorizationHeader: "Bearer xrxNC..."
  #   # If you're providing your own certificates, please use this to add the certificates as secrets.
  #   # It should start with -----BEGIN CERTIFICATE----- or
  #   # -----BEGIN RSA PRIVATE KEY-----
  #   caCert:
  # https://github.com/kubeapps/kubeapps/issues/478#issuecomment-422979262
  resources:
    limits:
      cpu: 250m
      memory: 128Mi
    requests:
      cpu: 25m
      memory: 32Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Hooks are used to perform actions like populating apprepositories
# or creating required resources during installation or upgrade
hooks:
  image:
    registry: docker.io
    repository: bitnami/kubectl
    tag: 1.12.3-r13
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Tiller Proxy is a secure REST API on top of Helm's Tiller component used to
# manage Helm chart releases in the cluster from Kubeapps. Set tillerProxy.host
# to configure a different Tiller host to use.
tillerProxy:
  replicaCount: 2
  image:
    registry: docker.io
    repository: bitnami/kubeapps-tiller-proxy
    tag: 1.4.0
  service:
    port: 8080
  host: tiller-deploy.kube-system:44134
  tls: {}
    # ca:
    # cert:
    # key:
    # verify: false
  # https://github.com/kubeapps/kubeapps/issues/478#issuecomment-422979262
  resources:
    limits:
      cpu: 250m
      memory: 128Mi
    requests:
      cpu: 25m
      memory: 32Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Chartsvc is used to serve chart metadata over a REST API.
chartsvc:
  replicaCount: 2
  image:
    registry: docker.io
    repository: bitnami/kubeapps-chartsvc
    tag: 1.4.0
  service:
    port: 8080
  # https://github.com/kubeapps/kubeapps/issues/478#issuecomment-422979262
  resources:
    limits:
      cpu: 250m
      memory: 128Mi
    requests:
      cpu: 25m
      memory: 32Mi
  livenessProbe:
    httpGet:
      path: /live
      port: 8080
    initialDelaySeconds: 60
    timeoutSeconds: 5
  readinessProbe:
    httpGet:
      path: /ready
      port: 8080
    initialDelaySeconds: 0
    timeoutSeconds: 5
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Dashboard serves the compiled static React frontend application. This is an
# internal service used by the main frontend reverse-proxy and should not be
# accessed directly.
dashboard:
  replicaCount: 2
  image:
    registry: docker.io
    repository: bitnami/kubeapps-dashboard
    tag: 1.4.0
  service:
    port: 8080
  livenessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 60
    timeoutSeconds: 5
  readinessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 0
    timeoutSeconds: 5
  # https://github.com/kubeapps/kubeapps/issues/478#issuecomment-422979262
  resources:
    limits:
      cpu: 250m
      memory: 128Mi
    requests:
      cpu: 25m
      memory: 32Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

##
## MongoDB chart configuration
##
## https://github.com/helm/charts/blob/master/stable/mongodb/values.yaml
##
mongodb:
  # Kubeapps uses MongoDB as a cache and persistence is not required
  persistence:
    enabled: false
  # MongoDB credentials are handled by kubeapps to facilitate upgrades
  existingSecret: kubeapps-mongodb
  # https://github.com/kubeapps/kubeapps/issues/478#issuecomment-422979262
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 50m
      memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

# For RBAC support:
rbac:
  # Perform creation of RBAC resources
  create: true

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  enabled: false
  runAsUser: 1001
  # fsGroup: 1001

testImage:
  # Image used for the tests. The only requirement is to include curl
  registry: docker.io
  repository: bitnami/nginx
  tag: 1.16.0-r3

# Auth Proxy for OIDC support
# ref: https://github.com/kubeapps/kubeapps/blob/master/docs/user/using-an-OIDC-provider.md
authProxy:
  # Set to true to enable the OIDC proxy
  enabled: false
  # Image used for the proxy
  image:
    registry: docker.io
    repository: bitnami/keycloak-gatekeeper
    tag: 2.3.0-r1
  # Mandatory parametes
  discoveryURL:
  clientID:
  clientSecret:
  # Additional flags for Keycloak-Gatekeeper
  additionalFlags:
    # - --skip-openid-provider-tls-verify
    # - --secure-cookie=false
  # https://github.com/kubeapps/kubeapps/issues/478#issuecomment-422979262
  resources:
    limits:
      cpu: 250m
      memory: 128Mi
    requests:
      cpu: 25m
      memory: 32Mi
