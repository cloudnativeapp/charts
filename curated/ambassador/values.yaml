# Default values for ambassador.
# Default values for ambassador.
# This is a YAML-formatted file.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# Declare variables to be passed into your templates.


replicaCount: 3
replicaCount: 3
daemonSet: false
daemonSet: false


# Enable autoscaling using HorizontalPodAutoscaler
# Enable autoscaling using HorizontalPodAutoscaler
# daemonSet: true, autoscaling will be disabled
# daemonSet: true, autoscaling will be disabled
autoscaling:
autoscaling:
  enabled: false
  enabled: false
  minReplicas: 2
  minReplicas: 2
  maxReplicas: 5
  maxReplicas: 5
  metrics:
  metrics:
    - type: Resource
    - type: Resource
      resource:
      resource:
        name: cpu
        name: cpu
        targetAverageUtilization: 60
        targetAverageUtilization: 60
    - type: Resource
    - type: Resource
      resource:
      resource:
        name: memory
        name: memory
        targetAverageUtilization: 60
        targetAverageUtilization: 60


# namespace:
# namespace:
  # name: default
  # name: default


# Additional container environment variable
# Additional container environment variable
env:
env:
  {}
  {}
  # Exposing statistics via StatsD
  # Exposing statistics via StatsD
  # STATSD_ENABLED: true
  # STATSD_ENABLED: true
  # STATSD_HOST: statsd-sink
  # STATSD_HOST: statsd-sink
  # sets the minimum number of seconds between Envoy restarts
  # sets the minimum number of seconds between Envoy restarts
  # AMBASSADOR_RESTART_TIME: 15
  # AMBASSADOR_RESTART_TIME: 15
  # sets the number of seconds that the Envoy will wait for open connections to drain on a restart
  # sets the number of seconds that the Envoy will wait for open connections to drain on a restart
  # AMBASSADOR_DRAIN_TIME: 5
  # AMBASSADOR_DRAIN_TIME: 5
  # sets the number of seconds that Ambassador will wait for the old Envoy to clean up and exit on a restart
  # sets the number of seconds that Ambassador will wait for the old Envoy to clean up and exit on a restart
  # AMBASSADOR_SHUTDOWN_TIME: 10
  # AMBASSADOR_SHUTDOWN_TIME: 10
  # labels Ambassador with an ID to allow for configuring multiple Ambassadors in a cluster
  # labels Ambassador with an ID to allow for configuring multiple Ambassadors in a cluster
  # AMBASSADOR_ID: default
  # AMBASSADOR_ID: default


imagePullSecrets: []
imagePullSecrets: []


securityContext:
securityContext:
  runAsUser: 8888
  runAsUser: 8888


image:
image:
  repository: registry.cn-hangzhou.aliyuncs.com/kubeapps/quay-ambassador
  repository: quay.io/datawire/ambassador
  tag: 0.70.0
  tag: 0.70.0
  pullPolicy: IfNotPresent
  pullPolicy: IfNotPresent


nameOverride: ""
nameOverride: ""
fullnameOverride: ""
fullnameOverride: ""
dnsPolicy: "ClusterFirst"
dnsPolicy: "ClusterFirst"
hostNetwork: false
hostNetwork: false


service:
service:
  type: LoadBalancer
  type: LoadBalancer


  # Note that target http ports need to match your ambassador configurations service_port
  # Note that target http ports need to match your ambassador configurations service_port
  # https://www.getambassador.io/reference/modules/#the-ambassador-module
  # https://www.getambassador.io/reference/modules/#the-ambassador-module
  http:
  http:
    enabled: true
    enabled: true
    port: 80
    port: 80
    targetPort: 8080
    targetPort: 8080
    # nodePort: 30080
    # nodePort: 30080


  https:
  https:
    enabled: true
    enabled: true
    port: 443
    port: 443
    targetPort: 8443
    targetPort: 8443
    # nodePort: 30443
    # nodePort: 30443


  annotations:
  annotations:
    getambassador.io/config: |
    getambassador.io/config: |
      ---
      ---
      apiVersion: ambassador/v1
      apiVersion: ambassador/v1
      kind: Module
      kind: Module
      name: ambassador
      name: ambassador
      config:
      config:
        service_port: 8080
        service_port: 8080
  #       diagnostics:
  #       diagnostics:
  #         enabled: false
  #         enabled: false


  # externalTrafficPolicy:
  # externalTrafficPolicy:
  # loadBalancerSourceRanges:
  # loadBalancerSourceRanges:
  #   - YOUR_IP_RANGE
  #   - YOUR_IP_RANGE


adminService:
adminService:
  create: true
  create: true
  type: ClusterIP
  type: ClusterIP
  port: 8877
  port: 8877
  # NodePort used if type is NodePort
  # NodePort used if type is NodePort
  # nodePort: 38877
  # nodePort: 38877


rbac:
rbac:
  # Specifies whether RBAC resources should be created
  # Specifies whether RBAC resources should be created
  create: true
  create: true
  namespaced: false
  namespaced: false


scope:
scope:
  # tells Ambassador to only use resources in the namespace or namespace set by namespace.name
  # tells Ambassador to only use resources in the namespace or namespace set by namespace.name
  singleNamespace: false
  singleNamespace: false


serviceAccount:
serviceAccount:
  # Specifies whether a service account should be created
  # Specifies whether a service account should be created
  create: true
  create: true
  # The name of the service account to use.
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # If not set and create is true, a name is generated using the fullname template
  name:
  name:


initContainers: []
initContainers: []


volumes: []
volumes: []


volumeMounts: []
volumeMounts: []


podLabels:
podLabels:
  {}
  {}


podAnnotations:
podAnnotations:
  {}
  {}
  # prometheus.io/scrape: "true"
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "9102"
  # prometheus.io/port: "9102"


resources:
resources:
  {}
  {}
  # If you do want to specify resources, uncomment the following
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  # limits:
  #  cpu: 100m
  #  cpu: 100m
  #  memory: 128Mi
  #  memory: 128Mi
  # requests:
  # requests:
  #  cpu: 100m
  #  cpu: 100m
  #  memory: 128Mi
  #  memory: 128Mi


nodeSelector: {}
nodeSelector: {}


tolerations: []
tolerations: []


affinity: {}
affinity: {}


# Enabling the prometheus exporter creates a sidecar and configures ambassador to use it
# Enabling the prometheus exporter creates a sidecar and configures ambassador to use it
prometheusExporter:
prometheusExporter:
  enabled: false
  enabled: false
  repository: prom/statsd-exporter
  repository: prom/statsd-exporter
  tag: v0.8.1
  tag: v0.8.1
  pullPolicy: IfNotPresent
  pullPolicy: IfNotPresent
  # You can configure the statsd exporter to modify the behavior of mappings and other features.
  # You can configure the statsd exporter to modify the behavior of mappings and other features.
  # See documentation: https://github.com/prometheus/statsd_exporter/tree/v0.8.1#metric-mapping-and-configuration
  # See documentation: https://github.com/prometheus/statsd_exporter/tree/v0.8.1#metric-mapping-and-configuration
  # Uncomment the following line if you wish to specify a custom configuration:
  # Uncomment the following line if you wish to specify a custom configuration:
  # configuration: |
  # configuration: |
  #   ---
  #   ---
  #   mappings:
  #   mappings:
  #   - match: 'envoy.cluster.*.upstream_cx_connect_ms'
  #   - match: 'envoy.cluster.*.upstream_cx_connect_ms'
  #     name: "envoy_cluster_upstream_cx_connect_time"
  #     name: "envoy_cluster_upstream_cx_connect_time"
  #     timer_type: 'histogram'
  #     timer_type: 'histogram'
  #     labels:
  #     labels:
  #       cluster_name: "$1"
  #       cluster_name: "$1"


ambassadorConfig: ""
ambassadorConfig: ""


pro:
pro:
  enabled: false
  enabled: false
  image:
  image:
    repository: registry.cn-hangzhou.aliyuncs.com/kubeapps/quay-ambassador_pro
    repository: registry.cn-hangzhou.aliyuncs.com/kubeapps/quay-ambassador_pro
    tag: amb-sidecar-0.4.0
    tag: amb-sidecar-0.4.0
  ports:
  ports:
    auth: 8500
    auth: 8500
    ratelimit: 8501
    ratelimit: 8501
    ratelimitDebug: 8502
    ratelimitDebug: 8502
  logLevel: info
  logLevel: info
  licenseKey:
  licenseKey:
    value:
    value:
    secret: false
    secret: false


crds:
crds:
  create: true
  create: true
  keep: true
  keep: true
