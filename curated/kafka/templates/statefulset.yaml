apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: "{{ template "kafka.fullname" . }}"
  labels:
    app.kubernetes.io/name: {{ template "kafka.name" . }}
    helm.sh/chart: {{ template "kafka.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: kafka
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "kafka.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: kafka
  serviceName: {{ template "kafka.fullname" . }}-headless
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: {{ .Values.updateStrategy | quote }}
    {{- if (eq "Recreate" .Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.rollingUpdatePartition }}
    {{- end }}
  template:
    metadata:
      name: "{{ template "kafka.fullname" . }}"
      labels:
        app.kubernetes.io/name: {{ template "kafka.name" . }}
        helm.sh/chart: {{ template "kafka.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/component: kafka
    spec:
{{- include "kafka.imagePullSecrets" . | indent 6 }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      containers:
      - name: "{{ template "kafka.fullname" . }}"
        image: "{{ template "kafka.image" . }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        {{- if .Values.image.debug }}
        - name: BASH_DEBUG
          value: "1"
        - name: NAMI_DEBUG
          value: "1"
        - name: NAMI_LOG_LEVEL
          value: "trace8"
        {{- end }}
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_ZOOKEEPER_CONNECT
          {{- if .Values.zookeeper.enabled }}
          value: {{ template "kafka.zookeeper.fullname" . }}
          {{- else }}
          value: {{ .Values.externalZookeeper.servers | quote }}
          {{- end }}
        - name: KAFKA_PORT_NUMBER
          value: {{ .Values.service.port | quote }}
        - name: KAFKA_LISTENERS
          {{- if .Values.listeners }}
          value: {{ .Values.listeners }}
          {{- else if .Values.auth.enabled }}
          value: "SASL_SSL://:$(KAFKA_PORT_NUMBER)"
          {{- else }}
          value: "PLAINTEXT://:$(KAFKA_PORT_NUMBER)"
          {{- end }}
        - name: KAFKA_ADVERTISED_LISTENERS
          {{- if .Values.advertisedListeners }}
          value: {{ .Values.advertisedListeners }}
          {{- else if .Values.auth.enabled  }}
          value: 'SASL_SSL://$(MY_POD_NAME).{{ template "kafka.fullname" . }}-headless.{{.Release.Namespace}}.svc.cluster.local:$(KAFKA_PORT_NUMBER)'
          {{- else }}
          value: 'PLAINTEXT://$(MY_POD_NAME).{{ template "kafka.fullname" . }}-headless.{{.Release.Namespace}}.svc.cluster.local:$(KAFKA_PORT_NUMBER)'
          {{- end }}
        {{- if .Values.auth.enabled }}
        - name: KAFKA_OPTS
          value: "-Djava.security.auth.login.config=/opt/bitnami/kafka/conf/kafka_jaas.conf"
        - name: KAFKA_BROKER_USER
          value: {{ .Values.auth.brokerUser | quote }}
        - name: KAFKA_BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ if .Values.auth.existingSecret }}{{ .Values.auth.existingSecret }}{{ else }}{{ template "kafka.fullname" . }}{{ end }}
              key: kafka-broker-password
        - name: KAFKA_INTER_BROKER_USER
          value: {{ .Values.auth.interBrokerUser | quote }}
        - name: KAFKA_INTER_BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ if .Values.auth.existingSecret }}{{ .Values.auth.existingSecret }}{{ else }}{{ template "kafka.fullname" . }}{{ end }}
              key: kafka-inter-broker-password
        {{- if .Values.auth.zookeeperUser }}
        - name: KAFKA_ZOOKEEPER_USER
          value: {{ .Values.auth.zookeeperUser | quote }}
        {{- end }}
        {{- if .Values.auth.zookeeperPassword }}
        - name: KAFKA_ZOOKEEPER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ if .Values.auth.existingSecret }}{{ .Values.auth.existingSecret }}{{ else }}{{ template "kafka.fullname" . }}{{ end }}
              key: kafka-zookeeper-password
        {{- end }}
        {{- end }}
        {{- if .Values.auth.certificatesPassword }}
        - name: KAFKA_CERTIFICATE_PASSWORD
          value: {{ .Values.auth.certificatesPassword | quote }}
        {{- end }}
        - name: ALLOW_PLAINTEXT_LISTENER
          {{- if .Values.auth.enabled }}
          value: "no"
          {{- else if .Values.allowPlaintextListener }}
          value: "yes"
          {{- else }}
          value: "no"
          {{- end }}
        - name: KAFKA_BROKER_ID
          value: {{ .Values.brokerId | quote }}
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: {{ .Values.deleteTopicEnable | quote }}
        - name: KAFKA_HEAP_OPTS
          value: {{ .Values.heapOpts | quote }}
        - name: KAFKA_LOG_FLUSH_INTERVAL_MESSAGES
          value: {{ .Values.logFlushIntervalMessages | quote }}
        - name: KAFKA_LOG_FLUSH_INTERVAL_MS
          value: {{ .Values.logFlushIntervalMs | quote }}
        - name: KAFKA_LOG_RETENTION_BYTES
          value: {{ .Values.logRetentionBytes | replace "_" "" | quote }}
        - name: KAFKA_LOG_RETENTION_CHECK_INTERVALS_MS
          value: {{ .Values.logRetentionCheckIntervalMs | quote }}
        - name: KAFKA_LOG_RETENTION_HOURS
          value: {{ .Values.logRetentionHours | quote }}
        - name: KAFKA_LOG_MESSAGE_FORMAT_VERSION
          value: {{ .Values.logMessageFormatVersion | quote }}
        - name: KAFKA_MAX_MESSAGE_BYTES
          value: {{ .Values.maxMessageBytes | replace "_" "" | quote }}
        - name: KAFKA_SEGMENT_BYTES
          value: {{ .Values.logSegmentBytes | replace "_" "" | quote }}
        - name: KAFKA_LOGS_DIRS
          value: {{ .Values.logsDirs }}
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: {{ .Values.defaultReplicationFactor | quote }}
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: {{ .Values.offsetsTopicReplicationFactor | quote }}
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: {{ .Values.transactionStateLogReplicationFactor | quote }}
        - name: KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM
          value: {{ .Values.sslEndpointIdentificationAlgorithm | quote }}
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: {{ .Values.transactionStateLogMinIsr | quote }}
        - name: KAFKA_NUM_IO_THREADS
          value: {{ .Values.numIoThreads | quote }}
        - name: KAFKA_NUM_NETWORK_THREADS
          value: {{ .Values.numNetworkThreads | quote }}
        - name: KAFKA_NUM_PARTITIONS
          value: {{ .Values.numPartitions | quote }}
        - name: KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR
          value: {{ .Values.numRecoveryThreadsPerDataDir | quote }}
        - name: KAFKA_SOCKET_RECEIVE_BUFFER_BYTES
          value: {{ .Values.socketReceiveBufferBytes | quote }}
        - name: KAFKA_SOCKET_REQUEST_MAX_BYTES
          value: {{ .Values.socketRequestMaxBytes | replace "_" "" | quote }}
        - name: KAFKA_SOCKET_SEND_BUFFER_BYTES
          value: {{ .Values.socketSendBufferBytes | quote }}
        - name: KAFKA_ZOOKEEPER_CONNECT_TIMEOUT_MS
          value: {{ .Values.zookeeperConnectionTimeoutMs | quote }}
        ports:
        - name: kafka
          containerPort: {{ .Values.service.port }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        volumeMounts:
        {{- if .Values.persistence.enabled }}
        - name: data
          mountPath: /bitnami/kafka
        {{ end }}
        {{ if .Values.config }}
        - name: kafka-config
          mountPath: /opt/bitnami/kafka/conf/server.properties
          subPath: server.properties
        {{ end }}
        {{ if .Values.auth.enabled }}
        - name: kafka-certificates
          mountPath: /opt/bitnami/kafka/conf/certs/
          readOnly: true
        {{ end }}
      {{ if .Values.metrics.jmx.enabled }}
      - name: jmx-exporter
        image: "{{ template "kafka.metrics.jmx.image" . }}"
        imagePullPolicy: "{{ .Values.metrics.jmx.image.pullPolicy }}"
        command:
        - java
        - -XX:+UnlockExperimentalVMOptions
        - -XX:+UseCGroupMemoryLimitForHeap
        - -XX:MaxRAMFraction=1
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - {{ .Values.metrics.jmx.exporterPort | quote }}
        - /etc/jmx-kafka/jmx-kafka-prometheus.yml
        ports:
        - containerPort: {{ .Values.metrics.jmx.exporterPort }}
        resources:
{{ toYaml .Values.metrics.jmx.resources | indent 10 }}
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-kafka
      {{ end }}
      volumes:
      {{ if .Values.metrics.jmx.enabled }}
      - name: jmx-config
        configMap:
          {{- if .Values.metrics.jmx.configMap.overrideName }}
          name: {{ .Values.metrics.jmx.configMap.overrideName }}
          {{- else }}
          name: {{ template "kafka.fullname" . }}-jmx-configuration
          {{- end }}
      {{ end }}
      {{ if .Values.config }}
      - name: kafka-config
        configMap:
          name: {{ template "kafka.fullname" . }}-configuration
      {{ end }}
      {{ if .Values.auth.enabled }}
      - name: kafka-certificates
        secret:
          secretName: {{ required "A secret containinig the Kafka JKS certificates is required when authentication in enabled" .Values.auth.certificatesSecret }}
          defaultMode: 256
      {{ end }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
        {{- range $key, $value := .Values.persistence.annotations }}
          {{ $key }}: {{ $value }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
{{- else }}
      - name: data
        emptyDir: {}
{{- end }}
