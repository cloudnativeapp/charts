{{- if ne .Values.core.env.GITLAB_BACKUP_SCHEDULE "disable" -}}
{{- $core := .Values.persistence.persistentVolumeClaim.core -}}
{{- $ingress := .Values.expose.ingress -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ include "gitlab.core" . }}-backup-scheduled"
  labels:
{{ include "gitlab.labels" . | indent 4 }}
    component: gitlab-backup-scheduled
spec:
  concurrencyPolicy: Forbid
  schedule: "{{ include "gitlab.core.backupSchedule" . }}"
  jobTemplate:
    metadata:
      labels:
{{ include "gitlab.labels" . | indent 8 }}
        component: gitlab-backup-scheduled
    spec:
      template: 
        spec:
          restartPolicy: Never
          containers:
          - name: gitlab
            image: "{{ .Values.core.image.repository }}:{{ .Values.core.image.tag }}"
            imagePullPolicy: {{ .Values.imagePullPolicy }}
            args:
            - app:rake
            - gitlab:backup:create
            - RAILS_ENV=production SKIP=$(GITLAB_BACKUP_SKIP)
            env:
          {{- range $name, $value := .Values.core.env }}
          {{- if ne (len ($value | quote)) 0 }}
            - name: {{ $name | quote }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.expose.type "ingress" }}
            {{ $ingress := .Values.expose.ingress -}}
            - name: GITLAB_HOST
              value: {{ $ingress.host | quote }}
            - name: GITLAB_SSH_PORT
              value: {{ $ingress.sshPort | quote }}
            {{- if .Values.expose.tls.enabled }}
            - name: GITLAB_HTTPS
              value: "true"
            - name: SSL_SELF_SIGNED
              value: "true"
            {{- end }}
          {{- end }}
          {{- if eq .Values.expose.type "nodePort" }}
            {{ $nodePort := .Values.expose.nodePort -}}
            - name: GITLAB_PORT
              value: {{ $nodePort.ports.http.nodePort | quote }}
            - name: GITLAB_SSH_PORT
              value: {{ $nodePort.ports.ssh.nodePort | quote }}
          {{- end }}
            - name: REDIS_HOST
              value: {{ include "gitlab.redis.host" . | quote }}
            - name: REDIS_PORT
              value: {{ include "gitlab.redis.port" . | quote }}
          {{- if (include "gitlab.redis.rawPassword" .) }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "gitlab.redis" . }}
                  key: REDIS_PASSWORD
          {{- end }}
            - name: DB_HOST
              value: {{ include "gitlab.database.host" . | quote }}
            - name: DB_PORT
              value: {{ include "gitlab.database.port" . | quote }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "gitlab.database" . }}
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "gitlab.database" . }}
                  key: DB_PASS
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "gitlab.database" . }}
                  key: DB_NAME
            - name: DB_ADAPTER
              value: postgresql
            - name: GITLAB_DATA_DIR
              value: "/home/git/data"
            - name: GITLAB_BACKUP_SCHEDULE
              value: disable
            volumeMounts:
            - name: data
              mountPath: /home/git/data
              subPath: {{ $core.subPath }}
          {{- if not .Values.persistence.enabled }}
          volumes:
          - name: data
            emptyDir: {}
          {{- else if $core.existingClaim }}
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: {{ $core.existingClaim }}
          {{- end -}}
          {{- if and .Values.persistence.enabled (not $core.existingClaim) }}
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: {{ include "gitlab.core" . }}
          {{- end -}}
        {{- with .Values.core.nodeSelector }}
          nodeSelector:
    {{ toYaml . | indent 8 }}
        {{- end }}
        {{- with .Values.core.affinity }}
          affinity:
    {{ toYaml . | indent 8 }}
        {{- end }}
        {{- with .Values.core.tolerations }}
          tolerations:
    {{ toYaml . | indent 8 }}
        {{- end }}
{{- end }}